[{"E:\\MERN\\B-kisan React Tables\\client\\src\\index.js":"1","E:\\MERN\\B-kisan React Tables\\client\\src\\App.js":"2","E:\\MERN\\B-kisan React Tables\\client\\src\\reportWebVitals.js":"3","E:\\MERN\\B-kisan React Tables\\client\\src\\contextapi.js":"4","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\crudnav\\crudnav_deletebtn.js":"5","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\topnav\\TopNavBar.js":"6","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\dashboard\\TabDashboard.js":"7","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\topnav\\TabShoworders.js":"8","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\topnav\\TabForm.js":"9","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\icons\\icons.js":"10","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\dashboard\\videocard.js":"11","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\grid\\ShowOrders.js":"12","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\dashboard\\ProductCard.js":"13","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\FormikForm.js":"14","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\others\\GlobalFilter.js":"15","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\crudnav\\crudnav.js":"16","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\FormikControl.js":"17","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\crudnav\\crudnav_updatebtn.js":"18","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\Input.js":"19","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\RadioButtons.js":"20","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\Textarea.js":"21","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\Select.js":"22","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\CheckboxGroup.js":"23","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\DatePicker.js":"24","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\TextError.js":"25"},{"size":502,"mtime":1606816018086,"results":"26","hashOfConfig":"27"},{"size":951,"mtime":1611564754308,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":372,"mtime":1611132715575,"results":"30","hashOfConfig":"27"},{"size":1001,"mtime":1611564754310,"results":"31","hashOfConfig":"27"},{"size":3883,"mtime":1611564754351,"results":"32","hashOfConfig":"27"},{"size":3978,"mtime":1611564754313,"results":"33","hashOfConfig":"27"},{"size":2870,"mtime":1611564754351,"results":"34","hashOfConfig":"27"},{"size":293,"mtime":1611564754350,"results":"35","hashOfConfig":"27"},{"size":11044,"mtime":1611564754346,"results":"36","hashOfConfig":"27"},{"size":955,"mtime":1611564754315,"results":"37","hashOfConfig":"27"},{"size":7881,"mtime":1611564754343,"results":"38","hashOfConfig":"27"},{"size":335,"mtime":1611564754312,"results":"39","hashOfConfig":"27"},{"size":16288,"mtime":1611564754336,"results":"40","hashOfConfig":"27"},{"size":278,"mtime":1611564754347,"results":"41","hashOfConfig":"27"},{"size":1955,"mtime":1611564754309,"results":"42","hashOfConfig":"27"},{"size":840,"mtime":1611564754319,"results":"43","hashOfConfig":"27"},{"size":18845,"mtime":1611564754311,"results":"44","hashOfConfig":"27"},{"size":473,"mtime":1611564754337,"results":"45","hashOfConfig":"27"},{"size":1275,"mtime":1611564754338,"results":"46","hashOfConfig":"27"},{"size":493,"mtime":1611564754340,"results":"47","hashOfConfig":"27"},{"size":725,"mtime":1611564754339,"results":"48","hashOfConfig":"27"},{"size":1286,"mtime":1611564754318,"results":"49","hashOfConfig":"27"},{"size":1003,"mtime":1611564754319,"results":"50","hashOfConfig":"27"},{"size":205,"mtime":1611564754340,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"relcji",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"E:\\MERN\\B-kisan React Tables\\client\\src\\index.js",[],["109","110"],"E:\\MERN\\B-kisan React Tables\\client\\src\\App.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\reportWebVitals.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\contextapi.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\crudnav\\crudnav_deletebtn.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\topnav\\TopNavBar.js",["111","112"],"import React, {useContext,useState } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {UserContext} from '../../contextapi'\r\n\r\nimport './NavBar.css'\r\nimport {Home,ContactUs,Telephone,Pencil,Email,OrderList} from '../icons/icons'\r\n\r\n\r\nfunction TopNavBar()\r\n  {\r\n      const [state,setState] = useContext(UserContext)\r\n      const logout_clicked=()=>{\r\n        setState({show_logout_btn: false})  \r\n        // alert(\"logout clicked\"+ state.show_logout_btn)\r\n    }\r\n\r\n    const [click, setClick] = useState(false);\r\n    const handleClick = () => setClick(!click);\r\n\r\n        return (\r\n            <>\r\n            <nav className=\"navbar\">\r\n              <div className=\"nav-container\">\r\n                <NavLink exact to=\"/\" className=\"nav-logo\">\r\n                <img id='logoimg' src='./LOGO_NEW.jpg' alt='bkisan logo'/> \r\n                 {'  '}B-Kisan\r\n                </NavLink>\r\n      \r\n                <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n\r\n                <li className=\"nav-item\" activeClassName=\"active\">\r\n                  <div class=\"dropdown\">\r\n  <button class=\"btn btn-dark dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"><ContactUs/>{' '}Contact us{' '}\r\n  <span class=\"caret\"></span></button>\r\n  <div class=\"dropdown-menu\" style={{\"width\":\"35vw\"}}>\r\n  <li><h4><Email/>{' '}Email : <a href=\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=bkisansmartfarming@gmail.com\" target=\"_blank\">\r\n    bkisansmartfarming@gmail.com</a></h4></li><hr/>\r\n    <li><h4><Email/>{' '}Email : <a href=\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=kisanpathshala@gmail.com\" target=\"_blank\">\r\n    kisanpathshala@gmail.com</a></h4></li><hr/>   \r\n  <li><h5>Office Contact :</h5><Telephone/> 9424538222</li><hr/>\r\n  <h5>Other contacts: </h5>\r\n  <ul style={{\"list-style-type\": \"none\"}}>\r\n    <li><Telephone/>9754838222{' '}(Madhyapradesh)</li>\r\n    <li><Telephone/>9754038222{' '}(Chattisgarh)</li>\r\n    <li><Telephone/>9754138222{' '}(Uttarpradesh)</li>\r\n    <li><Telephone/>7697438222{' '}(Maharashtra)</li>\r\n    <li><Telephone/>8966838222{' '}(Gujrat)</li>\r\n  </ul>\r\n  </div>\r\n</div>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      exact\r\n                      to=\"/dashboard\"\r\n                      activeClassName=\"active\"\r\n                      className=\"nav-links\"\r\n                      onClick={handleClick}\r\n                    >\r\n                   <Home/>{' '}Home\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      exact\r\n                      to=\"/form\"\r\n                      activeClassName=\"active\"\r\n                      className=\"nav-links\"\r\n                      onClick={handleClick}\r\n                    >\r\n                      <Pencil/>{' '}Form\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      exact\r\n                      to=\"/orders\"\r\n                      activeClassName=\"active\"\r\n                      className=\"nav-links\"\r\n                      onClick={handleClick}\r\n                    >\r\n                        <OrderList/>{' '}Orders\r\n                    </NavLink>\r\n                  </li>\r\n\r\n                  <li className=\"n\">\r\n                  {state.show_logout_btn && <button className=\"btn btn-primary\" style={{\"margin\":\"0px 0px 10px 0px\"}}  onClick={logout_clicked}>Logout</button>}\r\n                  </li>\r\n                </ul>\r\n                <div className=\"nav-icon\" onClick={handleClick}>\r\n                  <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </>\r\n            )\r\n        }\r\n    export default TopNavBar","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\dashboard\\TabDashboard.js",["113","114","115","116","117","118","119"],"import React, { Component } from 'react'\r\n\r\nimport './dashboard.css'\r\nimport {Hammer,Love,Chat,GeoLocation,Link,Linkdin,Facebook,Youtube} from '../icons/icons' \r\nimport ProductCard from './ProductCard'\r\nimport VideoCard from './videocard'\r\nclass TabDashboard extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"dash\">\r\n\r\n\r\n             <div className=\"hindi\">\r\n              <span>{'         '}</span>                    \r\n                   <img className='hindi_logo' src='./logo.jpg' alt='bkisan logo'/>  \r\n                   <span className=\"hindi_text\">{' '}किसान खर्च आधा, उत्पादन ज्यादा।</span>\r\n              <span>{'         '}</span>                    \r\n              </div>\r\n\r\n\r\n                  <div className=\"video_loc\">\r\n                          <div className=\"box\" >\r\n                               <VideoCard/>\r\n                           </div>\r\n                           <div className=\"box1\" >\r\n                                <span><GeoLocation/>{'  '}village+post - Taloon, district + Barwani(Madhyapradesh), Pin: 451551, India.</span>\r\n                                <br/>\r\n                                <br/>\r\n                                <div className=\"row\" >\r\n                                <a className=\"col\" data-toggle=\"tooltip\" title=\"Find on google maps\"  href=\"https://goo.gl/maps/jRn15qT3nipavgiDA\" target=\"_blank\"><GeoLocation/>{'  '}Reva Flora</a> \r\n                                <a className=\"col\" data-toggle=\"tooltip\" title=\"Find on google maps\" href=\"https://goo.gl/maps/PnUQM1D4Pa9u11AWA\" target=\"_blank\"><GeoLocation/>{'  '}B-kisan</a> \r\n                                </div><br/>\r\n\r\n                                <div className=\"row\" ></div>\r\n                                <a className=\"col\" data-toggle=\"tooltip\" title=\"LinkdIn\"  href=\"https://linkedin.com/in/b-kisan-24a998200\" target=\"_blank\"><Linkdin/>{' '}Linkedin</a>\r\n                                <a className=\"col\" data-toggle=\"tooltip\" title=\"Kisanpathshala Website \" href=\"http://www.kisanpathshala.com/\" target=\"_blank\"><Link/>{' '}Kisanpathshala</a>        \r\n                                <a className=\"col\" data-toggle=\"tooltip\" title=\"Facebook\" href=\"https://www.facebook.com/B-kisan-378294852890092\" target=\"__blank\"><Facebook/>{' '}Facebook</a>        \r\n                                <a className=\"col\" data-toggle=\"tooltip\" title=\"Youtube Channel\" href=\"https://www.youtube.com/channel/UCweQPKBI7cRH-zV70Xwfseg\" target=\"_blank\"><Youtube/>{' '}Youtube</a><br/>\r\n                            </div>\r\n              </div>\r\n\r\n            \r\n\r\n              <div className= \"product_div\">\r\n              <h1 style={{\"color\":\"rgba(30, 130, 76, 1)\" }}>Our Products</h1>\r\n              <h4 style={{\"color\":\"rgba(0, 177, 106, 1)\"}}>These products are organic affordable and help our farmers to make farming a profitable venture.</h4>  \r\n              <div className=\"product_container\">\r\n              <ProductCard  img_src={\"./products/Potassium Fluvate.jpg\"} img_name={\"Potassium Fluvate\"}/>\r\n              <ProductCard  img_src={\"./products/Potassium Humate.jpg\"} img_name={\"Potassium Humate\"}/>\r\n              <ProductCard  img_src={\"./products/vaysinometa.jpeg\"} img_name={\"Vaysinometa\"}/> \r\n              <ProductCard  img_src={\"./products/reva+.jpg\"} img_name={\"reva +\"}/>\r\n              <ProductCard  img_src={\"./products/revaG9.jpg\"} img_name={\"reva g9\"}/>\r\n              </div>\r\n              </div> \r\n\r\n              <div className=\"oltu_container\">\r\n                <span> <Hammer/>{' with '}<Love/>{' by '}<img className=\"oltu_img\" src=\"./products/oltu.jpg\"/></span>{' | '}\r\n                <span>{'reach out : '}<Chat/> <a href=\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=oltu.contact@gmail.com\" target=\"_blank\">oltu.contact@gmail.com</a></span>\r\n              </div>\r\n               \r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default TabDashboard","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\topnav\\TabShoworders.js",["120","121"],"import {useState, useEffect,useContext} from 'react'\r\nimport ShowOrders from '../grid/ShowOrders'\r\nimport axios from 'axios'\r\nimport {UserContext} from '../../contextapi'\r\n\r\n\r\nconst TabShoworders = () => {\r\n    \r\n    // const [show,setshow]=useState(false)\r\n    const [login,setlogin]=useState('')\r\n    const [pass,setpass]=useState('')\r\n    const [loggedin,setloggedin]=useState(false)\r\n    const [registered,setregistered]=useState(false)\r\n    const [state,setState] = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        if(login !== '' && pass !== '')\r\n        {\r\n            const payload = {username:login,password:pass}\r\n\r\n             axios.post(\"http://localhost:4000/user/add\",payload)\r\n             .then(()=>{\r\n                  console.log('axios to mongodb')\r\n             })\r\n             .catch(()=>{\r\n                  console.log('unable  to send from axios to mongodb')\r\n             })\r\n    \r\n        }//end of if\r\n    }, [registered])\r\n\r\n    useEffect(() => {\r\n       if(login !== '' && pass !== '')\r\n       {\r\n        const payload = {username:login,password:pass}\r\n\r\n        axios.get(\"http://localhost:4000/user/registered\",payload)\r\n        .then(()=>{\r\n             console.log('axios to mongodb successfully logged in')\r\n            //  setshow(true)\r\n             setState({show_logout_btn:true})  \r\n\r\n        })\r\n        .catch(()=>{\r\n             console.log('unable  to send from axios to mongodb')\r\n        })\r\n\r\n       }//if block\r\n\r\n    }, [loggedin])\r\n\r\n    return(\r\n    <div>\r\n    <div> \r\n    {!state.show_logout_btn && <div className=\"row\">\r\n            <div className=\" col-lg-4 center-block\">\r\n            <div className=\"card card-signin my-5\">\r\n            <div className=\"card-body\">\r\n                <form >\r\n                <div className=\"form-label-group \">\r\n                <input type=\"text\" id=\"login\" className=\"form-control mr-sm-2\" name=\"login\" placeholder=\"login\" value={login} onChange={(e)=>{setlogin(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"form-label-group\">\r\n                <input type=\"text\" id=\"password\" className=\"form-control mr-sm-2\" name=\"password\" placeholder=\"password\" value={pass} onChange={(e)=>{setpass(e.target.value)}}/>\r\n                </div>\r\n                <div className=\"form-label-group\">   \r\n                <button className=\"btn btn-outline-success mr-sm-4 my-2 my-sm-0\" onClick={(e)=>{ e.preventDefault(); setloggedin(true)}}>Login</button>\r\n                <button className=\"btn btn-outline-success mr-sm-4 my-2 my-sm-0\" onClick={(e)=>{ e.preventDefault(); setregistered(true)}}>Register</button>\r\n                </div> \r\n                </form>\r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n        </div>}\r\n    </div>\r\n\r\n\r\n     {state.show_logout_btn && <ShowOrders />}\r\n    </div>\r\n    )\r\n}\r\nexport default TabShoworders","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\topnav\\TabForm.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\icons\\icons.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\dashboard\\videocard.js",["122","123"],"import React,{useState} from 'react'\r\nimport {ChevronRight} from '../icons/icons'\r\n\r\nimport './dashboard.css'\r\nexport default function VideoCard() {\r\n    const id=['2e9viAUvwq4','B6j3nphJwCw','FFkOKY5JLwQ']\r\n    const video_url = 'https://www.youtube.com/embed/';\r\n    var [ind,setind]=useState(0);\r\n    const handleclick=()=>{\r\n        if(ind >= id.length-1)\r\n        {\r\n            setind(0)\r\n        }\r\n        else\r\n        {\r\n            setind(ind+1)\r\n        }\r\n    }\r\n    return (\r\n        < >\r\n        <div className=\"container\">\r\n           <iframe className=\"box\" \r\n            type=\"text/html\" width=\"700rem\" height=\"360rem\"\r\n            src={`https://youtube.com/embed/${id[ind]}?autoplay=0?controls=1?fs=1`}>\r\n            </iframe>\r\n          < button className=\"btn btn-outline-info box\" onClick={handleclick} style={{\"height\":360}} data-toggle=\"tooltip\" title=\"Next Video\"><ChevronRight /></button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\grid\\ShowOrders.js",["124","125","126","127","128"],"import React,{useEffect,useState,useMemo} from 'react'\r\nimport {useTable,useGlobalFilter,useSortBy,usePagination } from 'react-table'\r\nimport Crudnav from '../crudnav/crudnav'\r\nimport  {GlobalFilter} from '../others/GlobalFilter'\r\nimport axios from 'axios'\r\n\r\nimport {arrow_up, arrow_down} from '../icons/icons'\r\n// import {format} from 'date-fns'\r\nimport './react-table.css'\r\n\r\nfunction ShowOrders() {\r\n\r\nconst GroupedColumns = [\r\n  {\r\n     Header:\"Personal Details\",\r\n     columns:[\r\n      {Header:'ORDER NUM', accessor:'OrderNo'}, \r\n      {Header:'ORDER DATE', accessor:'Date',\r\n      //  Cell:(value)=>{ return format(new Date(value.date),'dd/mm/yyyy')} \r\n    }, \r\n\r\n      {Header:'NAME', accessor:'Name'}, \r\n      {Header:'ADHAR', accessor:'AadharNo'}, \r\n      {Header:'CONTACT', accessor:'Contact'}, \r\n      {Header:'ADDRESS', accessor:'Address'}, \r\n      {Header:'TEHSIL', accessor:'Tehsil'}, \r\n      {Header:'DISTRICT', accessor:'District'}, \r\n      {Header:'PINCODE', accessor:'PinCode'}, \r\n      {Header:'STATE', accessor:'State'}, \r\n      {Header:'WATSAPP', accessor:'Watsapp'}, \r\n      {Header:'COMPANY', accessor:'CompanyName'}\r\n     ]\r\n  },\r\n  {\r\n    Header:\"Order Details\",\r\n    columns:[\r\n      {Header:'ORDER TABLE', accessor:'OrderTable',\r\n                Cell: (cell ) => (                  \r\n                  <div class=\"dropdown\">\r\n                  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    ORDER \r\n                  </button>\r\n                  <div class=\"dropdown-menu lg\" aria-labelledby=\"dropdownMenuButton\">\r\n                  <table className=\"embedded\">\r\n                    <tr>\r\n                      <th>Srlno</th>\r\n                      <th>Details</th>\r\n                      <th>Quantity</th>\r\n                      <th>Rate</th>\r\n                      <th>Amount</th>\r\n                    </tr>\r\n                    \r\n                    { cell.row.values.OrderTable.map(function(row,index){return <tr>\r\n                       <td>{index}</td>\r\n                       <td>{row.Order_Details}</td>\r\n                       <td>{row.Order_Quantity}</td>\r\n                       <td>{row.Order_Rate}</td>\r\n                       <td>{row.Order_Amount}</td>                      \r\n                       </tr>})}\r\n                  </table>\r\n                  </div>\r\n                </div>\r\n                )\r\n\r\n\r\n                },\r\n                {Header:'BILL AMOUNT', accessor:'BillAmt'},  \r\n                {Header:'TRANSPORT CHARGE', accessor:'TransportChrg'}, \r\n                {Header:'TOTAL AMOUNT', accessor:'TotalAmt'}, \r\n                {Header:'ADVANCE PAID', accessor:'Advance'}, \r\n                {Header:'DUE AMOUNT', accessor:'DueAmt'  }, \r\n                {Header:'DELIVERY DATE', accessor:'DeliveryDate' },  \r\n                {Header:'DELIVERY PLACE', accessor:'DeliveryPlace'}, \r\n                 {Header:'DEPOSIT TABLE', accessor:'DepositTable',Cell: ({ cell }) => (    \r\n\r\n                  <div class=\"dropdown\">\r\n                  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Deposit\r\n                  </button>\r\n                  <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                  <table className=\"embedded\">\r\n                    <tr>\r\n                      <th>Srlno</th>\r\n                      <th>Date</th>\r\n                      <th>Bank</th>\r\n                      <th>UTR Number</th>\r\n                      <th>Amount</th>\r\n                    </tr>\r\n\r\n                        { cell.row.values.DepositTable.map(function(row,index){return <tr>\r\n                       <td>{index}</td>\r\n                       <td>{row.Deposit_Date}</td>\r\n                       <td>{row.Deposit_Bank}</td>\r\n                       <td>{row.Deposit_UTRNo}</td>\r\n                       <td>{row.Deposit_Amount}</td>                      \r\n                       </tr>})}\r\n                  </table>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                )  }\r\n    ]\r\n  },\r\n  {\r\n    Header:\"Bank Details\",\r\n    columns:[\r\n      {Header:'BANK ACCOUNT', accessor:'Ac'             }, \r\n                {Header:'ACCOUNT HOLDER', accessor:'AcHolder'     }, \r\n                {Header:'ACCOUNT NUMBER', accessor:'AcNo'         },  \r\n                {Header:'IFSC CODE', accessor:'IFSC'              },  \r\n                {Header:'DEALER NAME', accessor:'DealerName'      },    \r\n                {Header:'DEALER CONTACT', accessor:'DealerContact'}\r\n    ]\r\n  },\r\n]  \r\n\r\n  const [RowData,setRowData] = useState([])\r\n\r\n\r\n  const fetch_data=async()=>{\r\n    try{\r\n      let ref = await fetch('http://localhost:4000/order/show')\r\n    ref = await ref.json();\r\n    console.log(ref);\r\n    setRowData(ref);\r\n    }\r\n    catch(e){\r\n     console.error(e);\r\n    } \r\n  }\r\n  useMemo(() => {\r\n    console.log('hello')\r\n     fetch_data()   \r\n  }, [])\r\n\r\n\r\n\r\n  const columns = useMemo(()=> GroupedColumns,[]  )\r\n  // const data = useMemo( () => RowData,[] )\r\n\r\n  // const columns = GroupedColumns\r\n  const data = RowData\r\n\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    state,\r\n    setGlobalFilter, \r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  },\r\n  useGlobalFilter,useSortBy,usePagination)\r\n  const {pageIndex} = state \r\n  const {globalFilter} = state\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <>\r\n    <Crudnav/>\r\n\r\n    <div style={{ \"background-color\": \"wheat\"}}>\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                {column.render('Header')}\r\n                  {column.isSorted ? (column.isSortedDesc ? ' v':' ^'):''}\r\n                </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {page.map((row, i) => {\r\n          prepareRow(row)\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell ,i) => {\r\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              })}\r\n            </tr> \r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>  \r\n\r\n\r\n\r\n    <div className=\"row\">\r\n    <div className=\"col\" style={{\"paddingTop\":\"7px\"}}>\r\n          <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\r\n    </div> \r\n      <div className=\"col\" style={{\"paddingTop\":\"7px\"}}>\r\n        <span>\r\n         {' '}Page{' '}\r\n         <strong>{' '}\r\n           {pageIndex + 1} of {pageOptions.length} \r\n         </strong>\r\n        </span>\r\n        <span>\r\n        {' '}|{' '}Go to Page :\r\n          <input type=\"number\" defaultValue={pageIndex+1}\r\n          onChange={e=>{ \r\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\r\n            gotoPage(pageNumber)\r\n          }}\r\n            style={{width:\"50px\"}}/> \r\n        </span>\r\n        </div>\r\n        <div className=\"col\" style={{\"paddingTop\":\"3px\"}}>\r\n        <button className=\"btn btn-primary\" onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n        </div>\r\n        <div className=\"col\">\r\n        </div> \r\n        <div className=\"col\" style={{\"paddingTop\":\"3px\"}}>\r\n        <button className=\"btn btn-primary\" onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ShowOrders\r\n","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\dashboard\\ProductCard.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\FormikForm.js",["129","130","131","132","133","134","135","136","137"],"import React, {useState} from 'react'\r\nimport {Formik, Form, FieldArray} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from './FormikControl'\r\nimport axios from 'axios'\r\n\r\nimport './formik.css'\r\nfunction FormikForm() {\r\n\r\n    const [Personal, setPersonal] = useState(true)\r\n    const [Orders, setOrders] = useState(false)\r\n    const [Bank, setBank] = useState(false)\r\n    \r\n\r\n    const AcOptions = [\r\n        {key : 'SBI', value : 'SBI'},\r\n        {key : 'HDFC', value : 'HDFC'}\r\n    ]    \r\n\r\n    const initialValues = {\r\n        OrderNo:'',\r\n        Date:'',\r\n        Name:'',\r\n        AadharNo:'',\r\n        Address:'',\r\n        Tehsil:'',\r\n        District:'',\r\n        PinCode:'',\r\n        State:'',\r\n        Whatsapp:'',\r\n        Contact:'',\r\n        CompanyName:'',\r\n\r\n        OrderTable: [{\r\n            Order_Details:'',\r\n            Order_Quantity:'',\r\n            Order_Rate:'',\r\n            Order_Amount:''\r\n        }],      \r\n         \r\n        TotalAmt:0,\r\n        Advance:0, \r\n        BillAmt:0,\r\n        TransportChrg:0,\r\n        DueAmt:0,\r\n        DeliveryDate:'',\r\n        DeliveryPlace:'',\r\n        DepositTable:[{\r\n            Deposit_Date:'',\r\n            Deposit_Amount:'',\r\n            Deposit_UTRNo:'',\r\n            Deposit_Bank:''\r\n        }],        \r\n\r\n        Ac:'',\r\n        AcHolder:'',\r\n        AcNo:'',\r\n        IFSC:'',\r\n        DealerName:'',\r\n        DealerContact:'',            \r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        OrderNo : Yup.string().nullable(),\r\n        Date : Yup.date().required('Required'),\r\n        Name : Yup.string().required('Required'),\r\n        AadharNo : Yup.string().matches(/^\\d{4}\\s\\d{4}\\s\\d{4}$/, 'Invalid Aadhar No').required('Required'),\r\n        Address : Yup.string().required('Required'),\r\n        Tehsil : Yup.string().required('Required'),\r\n        District : Yup.string().required('Required'),\r\n        PinCode : Yup.string().matches(/^\\d{3}\\s\\d{3}$/, 'Invalid PinCode').required('Required'),\r\n        State : Yup.string().required('Required'),\r\n        Whatsapp : Yup.string().matches(/^\\d{10}$/, 'Invalid WhatsApp No').nullable(),\r\n        Contact : Yup.string().matches(/^\\d{10}$/, 'Invalid Contact No').required('Required'),\r\n        CompanyName : Yup.string().required('Required'),\r\n\r\n        OrderTable : Yup.array().of(\r\n            Yup.object({\r\n                Order_Details : Yup.string().required('Required'),\r\n                Order_Quantity : Yup.number().positive().typeError('Must be a number').required('Required'),\r\n                Order_Rate : Yup.number().positive().typeError('Must be a number').required('Required'),\r\n            })\r\n        ).required('Must have orders').min(1, 'Minimum 1 order'),        \r\n        TransportChrg : Yup.number().positive().nullable(),\r\n        Advance : Yup.number().positive().required('Required'),\r\n        BillAmt : Yup.number().positive().required('Required'),\r\n        TotalAmt : Yup.number().required('Required'),\r\n        DueAmt : Yup.number().required('Required'),\r\n        DeliveryDate : Yup.date().required('Required'),\r\n        DeliveryPlace : Yup.string().required('Required'),\r\n        DepositTable : Yup.array().of(\r\n            Yup.object({\r\n                Deposit_Date : Yup.date().required('Required'),\r\n                Deposit_Amount : Yup.number().positive().required('Required'),\r\n                Deposit_UTRNo: Yup.string().required('Required'),\r\n                Deposit_Bank : Yup.string().required('Required')\r\n            })\r\n        ).min(1, 'Minimum one required').required('Required'),\r\n\r\n        Ac : Yup.string().required('Required'),\r\n        AcHolder : Yup.string().required('Required'),\r\n        AcNo : Yup.number().positive().required('Required'),\r\n        IFSC: Yup.string().matches(/^\\w{4}0\\d{6}$/, 'Invalid IFSC code').required('Required'),\r\n        DealerName : Yup.string().required('Required'),\r\n        DealerContact : Yup.string().matches(/^\\d{10}$/, 'Invalid Mobile No').required('Required')\r\n    })\r\n\r\n    const onSubmit = (values, onSubmitProps) =>{\r\n        console.log('Form values', values)        \r\n        // const payload = values        \r\n        // axios.post('http://localhost:4000/order/add' ,payload)\r\n        // .then((data)=>{\r\n        //     console.log(data)\r\n        //     alert(\"Successfully submitted form.\")\r\n        // })\r\n        // .catch((err)=>{console.log(err)})\r\n        onSubmitProps.resetForm()\r\n    }\r\n\r\n    const personal_next = () =>{      \r\n            setPersonal(prevPersonal => !prevPersonal)\r\n            setOrders(prevOrders => !prevOrders)\r\n    }\r\n\r\n    const order_next = () =>{   \r\n            setOrders(prevOrders => !prevOrders)\r\n            setBank(prevBank => !prevBank)\r\n    }\r\n\r\n    const order_prev =()=>{\r\n        setPersonal(prevPersonal => !prevPersonal)\r\n        setOrders(prevOrders => !prevOrders)        \r\n    }\r\n\r\n    const bank_prev = () =>{   \r\n        setOrders(prevOrders => !prevOrders)\r\n        setBank(prevBank => !prevBank)\r\n    }\r\n\r\n    function add_row (arrayHelpers, setFieldValue, bill, amt){        \r\n        arrayHelpers.insert(0,{Order_Details: '', Order_Quantity: '', Order_Rate: '', Order_Amount: ''})\r\n        set_bill_add(setFieldValue,bill,amt)\r\n    } \r\n\r\n    function set_bill_add (setFieldValue,bill,amt){\r\n        setFieldValue('BillAmt', bill+=amt)        \r\n    }\r\n\r\n    function del_row (arrayHelpers,index, setFieldValue, bill, amt){   \r\n        set_bill_del(setFieldValue,bill,amt)     \r\n        arrayHelpers.remove(index)        \r\n    } \r\n\r\n    function set_bill_del (setFieldValue,bill,amt){        \r\n        setFieldValue('BillAmt', bill-=amt)\r\n    }\r\n\r\n    return (\r\n       <Formik\r\n        initialValues = {initialValues}\r\n        validationSchema = {validationSchema}\r\n        onSubmit = {onSubmit}  \r\n        validateOnBlur={false} > \r\n            {\r\n                formik =>{                    \r\n                    return <Form className=\"formik_form\">\r\n                        {Personal && <div className = 'form-control'>\r\n                            <FormikControl  className = \"inp\"  control = 'input' type = 'text' name = 'OrderNo' placeholder = 'Order No' /> \r\n                            <FormikControl  className = \"inp\"  control = 'date' name = 'Date' placeholderText = 'Enter date' />   \r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'Name' placeholder = 'Name' />  \r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'AadharNo' placeholder = 'Aadhar No eg: 1234 5678 1234' />  \r\n                            <FormikControl  className=\"inplg\"  control = 'textarea' name = 'Address' placeholder = 'Address' />   \r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'Tehsil' placeholder = 'Tehsil' />\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'District' placeholder = 'District' />\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'PinCode' placeholder = 'Enter PinCode eg: 123 456' />\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'State' placeholder = 'State'/>\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'Whatsapp' placeholder = 'Whatsapp Number' />\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'Contact' placeholder = 'Contact Number' />\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'CompanyName' placeholder = 'Enter Company Name' />\r\n                            <button className=\"btn btn-primary\"  type = 'button' onClick={personal_next}>Next</button>                          \r\n                        </div> } \r\n\r\n                        {Orders && <div className = 'form-control'>\r\n                            <table>\r\n                                <thead>\r\n                                    Orders                                 \r\n                                    \r\n                                    {/* <tr>\r\n                                        <th scope=\"col\" >Srl No</th>\r\n                                        <th scope=\"col \">Details</th>\r\n                                        <th scope=\"col\">Quantity</th>\r\n                                        <th scope=\"col\">Rate</th>\r\n                                        <th scope=\"col\">Amount</th>\r\n                                    </tr> */}\r\n                                </thead> \r\n                                <tbody>                                     \r\n                                    <FieldArray className=\"f_arr\" name = 'OrderTable'  render ={arrayHelpers => (<div> {formik.values.OrderTable.map((Order, index) => (<div key={index}>                                                \r\n                                            <td scope=\"col\">{index==0 && <button type = 'button' onClick = {() => {add_row(arrayHelpers,formik.setFieldValue, formik.values.BillAmt, formik.values.OrderTable[index].Order_Quantity * formik.values.OrderTable[index].Order_Rate)}}>Add</button>}</td>\r\n                                            <td scope=\"col\">{index >0 && <button type = 'button' onClick = {() => {del_row(arrayHelpers,index,formik.setFieldValue, formik.values.BillAmt,formik.values.OrderTable[index].Order_Quantity * formik.values.OrderTable[index].Order_Rate)}}>Delete</button>}</td>\r\n                                            <td scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Details`} placeholder = {`Detail`} /></td>\r\n                                            <td scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Quantity`} placeholder = {`Quantity`}/></td>\r\n                                            <td scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Rate`} placeholder = {`Rate`}/></td>\r\n                                            <td scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'input' type = 'text' name = {`OrderTable[${index}].Order_Amount`} placeholder = {`Amount`} value = {formik.values.OrderTable[index].Order_Quantity * formik.values.OrderTable[index].Order_Rate}/></td>\r\n                                            \r\n                                        </div>))}                                            \r\n                                        </div>)}/>\r\n                                        \r\n                                 </tbody> \r\n                            </table>\r\n\r\n                            <FormikControl  className=\"inp\"  control = 'input' name = 'BillAmt' type = 'text' label = 'Bill Amount' placeholder = 'Bill Amount'/>                            \r\n                            <FormikControl  className=\"inp\"  control = 'input' name = 'TransportChrg' type = 'text' label = 'Transport Charge' placeholder = 'Transport Charge'/>\r\n                            <FormikControl  className=\"inp\"  control = 'input' name = 'Advance' type = 'text' label = 'Advance ' placeholder = 'Advance Amount' />\r\n                            <FormikControl  className=\"inp\"  control = 'input' name = 'TotalAmt' type = 'text' label = 'Total Amount' placeholder = 'Total Amount' value={Number(formik.values.BillAmt)+Number(formik.values.TransportChrg)} />\r\n                            <FormikControl  className=\"inp\"  control = 'input' name = 'DueAmt' type = 'text' label = 'Due Amount' placeholder = 'Due Amount' value={(Number(formik.values.BillAmt)+Number(formik.values.TransportChrg))-Number(formik.values.Advance)}/>\r\n                            <FormikControl  className=\"inp\"  control = 'date' name = 'DeliveryDate' label = 'Delivery Date' placeholderText = 'Delivery Date'/>\r\n                            <FormikControl  className=\"inplg\"  control = 'textarea' name = 'DeliveryPlace' type = 'text'  placeholder = 'Delivery Address '/>\r\n                            \r\n                            <table>\r\n                                <thead>\r\n                                    Deposit Details\r\n                                    {/* <tr>\r\n                                        <th scope=\"col\" colspan=\"2\">Srl No</th>\r\n                                        <th scope=\"col \">Deposit Date</th>\r\n                                        <th scope=\"col\">Amount</th>\r\n                                        <th scope=\"col\">UTR, IMPS, Ref No.</th>\r\n                                        <th scope=\"col\">Bank Name</th>\r\n                                    </tr> */}\r\n                                </thead>\r\n                                <tbody>                                    \r\n                                    <FieldArray className=\"f_arr\" name = 'DepositTable'  render ={arrayHelpers => (<div> {formik.values.DepositTable.map((Deposit, index) => (<div key={index}>                                                \r\n                                            <th scope=\"col\">{index==0 && <button type = 'button' onClick = {() => arrayHelpers.insert(0,{Deposit_Date: '', Deposit_Amount: '', Deposit_UTRNo: '', Deposit_Bank:''}) }>+ New</button>}</th>\r\n                                            <th scope=\"col\">{index>0 && <button type = 'button' onClick = {() => arrayHelpers.remove(index)}>Delete</button>}</th>\r\n                                            <th scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'date' type = 'text' name = {`DepositTable[${index}].Deposit_Date`} placeholderText = {`dd/mm/yyyy`}/></th>\r\n                                            <th scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'input' type = 'text' name = {`DepositTable[${index}].Deposit_Amount`} placeholder = {`Amount`}  /></th>\r\n                                            <th scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'input' type = 'text' name = {`DepositTable[${index}].Deposit_UTRNo`} placeholder = {`IMPS, UTR, Ref No`} /></th>\r\n                                            <th scope=\"col\"><FormikControl  className=\"inpsm\"  control = 'input' type = 'text' name = {`DepositTable[${index}].Deposit_Bank`} placeholder = {`Bank`} /></th>\r\n                                        </div>))}                                            \r\n                                        </div>)}/>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <button className=\"btn btn-primary\"  type='button' onClick = {order_prev}>Previous</button>\r\n                            <button className=\"btn btn-primary\"  type = 'button' onClick = {order_next}>Next</button>    \r\n                            </div>}             \r\n\r\n                        {Bank && <div  className = 'form-control'>\r\n                            <FormikControl  className=\"inp\"  control = 'radio' name = 'Ac' options={AcOptions}/>\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'AcHolder' placeholder = 'A/c Holder Name'/>\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'AcNo' placeholder = 'A/c No'/>\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'IFSC' placeholder = 'IFSC'/>\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'DealerName' placeholder = 'Dealer Name'/>\r\n                            <FormikControl  className=\"inp\"  control = 'input' type = 'text' name = 'DealerContact' placeholder = 'Mobile Number'/>\r\n                            <button className=\"btn btn-primary\"  type='button' onClick = {bank_prev}>Previous</button>\r\n                            <button className=\"btn btn-primary\"  type = 'submit' >Submit</button>  \r\n        \r\n                            {/* disabled = {!formik.isValid} */}\r\n                            </div>}\r\n                    </Form>\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default FormikForm","E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\others\\GlobalFilter.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\crudnav\\crudnav.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\FormikControl.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\crudnav\\crudnav_updatebtn.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\Input.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\RadioButtons.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\Textarea.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\Select.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\CheckboxGroup.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\DatePicker.js",[],"E:\\MERN\\B-kisan React Tables\\client\\src\\Components\\form\\formik\\TextError.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":37,"column":32,"nodeType":"144","endLine":37,"endColumn":138},{"ruleId":"142","severity":1,"message":"143","line":39,"column":34,"nodeType":"144","endLine":39,"endColumn":136},{"ruleId":"142","severity":1,"message":"143","line":30,"column":33,"nodeType":"144","endLine":30,"endColumn":164},{"ruleId":"142","severity":1,"message":"143","line":31,"column":33,"nodeType":"144","endLine":31,"endColumn":163},{"ruleId":"142","severity":1,"message":"143","line":35,"column":33,"nodeType":"144","endLine":35,"endColumn":156},{"ruleId":"142","severity":1,"message":"143","line":36,"column":33,"nodeType":"144","endLine":36,"endColumn":160},{"ruleId":"142","severity":1,"message":"143","line":38,"column":33,"nodeType":"144","endLine":38,"endColumn":178},{"ruleId":"145","severity":1,"message":"146","line":57,"column":58,"nodeType":"144","endLine":57,"endColumn":111},{"ruleId":"142","severity":1,"message":"143","line":58,"column":47,"nodeType":"144","endLine":58,"endColumn":147},{"ruleId":"147","severity":1,"message":"148","line":30,"column":8,"nodeType":"149","endLine":30,"endColumn":20,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":50,"column":8,"nodeType":"149","endLine":50,"endColumn":18,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":7,"column":11,"nodeType":"155","messageId":"156","endLine":7,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":22,"column":12,"nodeType":"144","endLine":24,"endColumn":85},{"ruleId":"153","severity":1,"message":"159","line":1,"column":15,"nodeType":"155","messageId":"156","endLine":1,"endColumn":24},{"ruleId":"153","severity":1,"message":"160","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"153","severity":1,"message":"161","line":7,"column":9,"nodeType":"155","messageId":"156","endLine":7,"endColumn":17},{"ruleId":"153","severity":1,"message":"162","line":7,"column":19,"nodeType":"155","messageId":"156","endLine":7,"endColumn":29},{"ruleId":"147","severity":1,"message":"163","line":139,"column":47,"nodeType":"149","endLine":139,"endColumn":49,"suggestions":"164"},{"ruleId":"153","severity":1,"message":"160","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":198,"column":49,"nodeType":"167","endLine":198,"endColumn":60},{"ruleId":"168","severity":1,"message":"169","line":198,"column":67,"nodeType":"170","messageId":"171","endLine":198,"endColumn":69},{"ruleId":"165","severity":1,"message":"166","line":199,"column":49,"nodeType":"167","endLine":199,"endColumn":60},{"ruleId":"165","severity":1,"message":"166","line":200,"column":49,"nodeType":"167","endLine":200,"endColumn":60},{"ruleId":"165","severity":1,"message":"166","line":201,"column":49,"nodeType":"167","endLine":201,"endColumn":60},{"ruleId":"165","severity":1,"message":"166","line":202,"column":49,"nodeType":"167","endLine":202,"endColumn":60},{"ruleId":"165","severity":1,"message":"166","line":203,"column":49,"nodeType":"167","endLine":203,"endColumn":60},{"ruleId":"168","severity":1,"message":"169","line":232,"column":67,"nodeType":"170","messageId":"171","endLine":232,"endColumn":69},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'login' and 'pass'. Either include them or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has missing dependencies: 'login', 'pass', and 'setState'. Either include them or remove the dependency array.",["175"],"no-unused-vars","'video_url' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'useEffect' is defined but never used.","'axios' is defined but never used.","'arrow_up' is defined but never used.","'arrow_down' is defined but never used.","React Hook useMemo has a missing dependency: 'GroupedColumns'. Either include it or remove the dependency array.",["176"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [login, pass, registered]",{"range":"183","text":"184"},"Update the dependencies array to be: [loggedin, login, pass, setState]",{"range":"185","text":"186"},"Update the dependencies array to be: [GroupedColumns]",{"range":"187","text":"188"},[947,959],"[login, pass, registered]",[1479,1489],"[loggedin, login, pass, setState]",[5139,5141],"[GroupedColumns]"]